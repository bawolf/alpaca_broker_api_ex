# NOTE: This file is auto generated by OpenAPI Generator 7.6.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule BrokerAPI.Model.Asset do
  @moduledoc """
  Assets are sorted by asset class, exchange and symbol. Some assets are not tradable with Alpaca. These assets will be marked with the flag tradable=false
  """

  @derive Jason.Encoder
  defstruct [
    :id,
    :class,
    :exchange,
    :symbol,
    :name,
    :status,
    :tradable,
    :marginable,
    :shortable,
    :easy_to_borrow,
    :fractionable,
    :last_close_pct_change,
    :last_price,
    :last_close
  ]

  @type t :: %__MODULE__{
    :id => String.t,
    :class => BrokerAPI.Model.AssetClass.t,
    :exchange => BrokerAPI.Model.Exchange.t | nil,
    :symbol => String.t,
    :name => String.t | nil,
    :status => String.t | nil,
    :tradable => boolean() | nil,
    :marginable => boolean() | nil,
    :shortable => boolean() | nil,
    :easy_to_borrow => boolean() | nil,
    :fractionable => boolean() | nil,
    :last_close_pct_change => String.t | nil,
    :last_price => String.t | nil,
    :last_close => String.t | nil
  }

  alias BrokerAPI.Deserializer

  def decode(value) do
    value
     |> Deserializer.deserialize(:class, :struct, BrokerAPI.Model.AssetClass)
     |> Deserializer.deserialize(:exchange, :struct, BrokerAPI.Model.Exchange)
  end
end


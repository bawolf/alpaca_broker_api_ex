# NOTE: This file is auto generated by OpenAPI Generator 7.6.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule BrokerAPI.Model.TradeAccount do
  @moduledoc """
  This is an extended version of the Account model found [in the trading api](https://alpaca.markets/docs/api-references/trading-api/account/#account-entity).  Extra data has been added that would be useful for brokers.
  """

  @derive Jason.Encoder
  defstruct [
    :id,
    :account_number,
    :status,
    :currency,
    :buying_power,
    :regt_buying_power,
    :daytrading_buying_power,
    :cash,
    :cash_withdrawable,
    :cash_transferable,
    :pending_transfer_out,
    :portfolio_value,
    :pattern_day_trader,
    :trading_blocked,
    :transfers_blocked,
    :account_blocked,
    :created_at,
    :trade_suspended_by_user,
    :multiplier,
    :shorting_enabled,
    :equity,
    :last_equity,
    :long_market_value,
    :short_market_value,
    :initial_margin,
    :maintenance_margin,
    :last_maintenance_margin,
    :sma,
    :daytrade_count,
    :previous_close,
    :last_long_market_value,
    :last_short_market_value,
    :last_cash,
    :last_initial_margin,
    :last_regt_buying_power,
    :last_daytrading_buying_power,
    :last_buying_power,
    :last_daytrade_count,
    :clearing_broker
  ]

  @type t :: %__MODULE__{
    :id => String.t,
    :account_number => String.t | nil,
    :status => BrokerAPI.Model.AccountStatus.t,
    :currency => String.t,
    :buying_power => String.t,
    :regt_buying_power => String.t | nil,
    :daytrading_buying_power => String.t | nil,
    :cash => String.t,
    :cash_withdrawable => String.t | nil,
    :cash_transferable => String.t | nil,
    :pending_transfer_out => String.t | nil,
    :portfolio_value => String.t | nil,
    :pattern_day_trader => boolean() | nil,
    :trading_blocked => boolean() | nil,
    :transfers_blocked => boolean() | nil,
    :account_blocked => boolean() | nil,
    :created_at => String.t,
    :trade_suspended_by_user => boolean() | nil,
    :multiplier => String.t | nil,
    :shorting_enabled => boolean() | nil,
    :equity => String.t,
    :last_equity => String.t,
    :long_market_value => String.t | nil,
    :short_market_value => String.t | nil,
    :initial_margin => String.t | nil,
    :maintenance_margin => String.t | nil,
    :last_maintenance_margin => String.t | nil,
    :sma => String.t | nil,
    :daytrade_count => integer() | nil,
    :previous_close => String.t | nil,
    :last_long_market_value => String.t | nil,
    :last_short_market_value => String.t | nil,
    :last_cash => String.t | nil,
    :last_initial_margin => String.t | nil,
    :last_regt_buying_power => String.t | nil,
    :last_daytrading_buying_power => String.t | nil,
    :last_buying_power => String.t | nil,
    :last_daytrade_count => integer() | nil,
    :clearing_broker => String.t | nil
  }

  alias BrokerAPI.Deserializer

  def decode(value) do
    value
     |> Deserializer.deserialize(:status, :struct, BrokerAPI.Model.AccountStatus)
  end
end


# NOTE: This file is auto generated by OpenAPI Generator 7.6.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule BrokerAPI.Model.JournalStatusEvent do
  @moduledoc """
  Represents a change in a Journal's status, sent over the events streaming api. 
  """

  @derive Jason.Encoder
  defstruct [
    :at,
    :entry_type,
    :event_id,
    :journal_id,
    :status_from,
    :status_to
  ]

  @type t :: %__MODULE__{
    :at => DateTime.t,
    :entry_type => BrokerAPI.Model.JournalEntryType.t,
    :event_id => integer(),
    :journal_id => String.t,
    :status_from => BrokerAPI.Model.JournalStatus.t,
    :status_to => BrokerAPI.Model.JournalStatus.t
  }

  alias BrokerAPI.Deserializer

  def decode(value) do
    value
     |> Deserializer.deserialize(:at, :datetime, nil)
     |> Deserializer.deserialize(:entry_type, :struct, BrokerAPI.Model.JournalEntryType)
     |> Deserializer.deserialize(:status_from, :struct, BrokerAPI.Model.JournalStatus)
     |> Deserializer.deserialize(:status_to, :struct, BrokerAPI.Model.JournalStatus)
  end
end


# NOTE: This file is auto generated by OpenAPI Generator 7.6.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule BrokerAPI.Model.BatchJournalResponse do
  @moduledoc """
  A Journal object with an extra attribute error_message in the case when a specific account fails to receive a journal.
  """

  @derive Jason.Encoder
  defstruct [
    :id,
    :entry_type,
    :from_account,
    :to_account,
    :settle_date,
    :status,
    :symbol,
    :qty,
    :price,
    :description,
    :net_amount,
    :transmitter_name,
    :transmitter_account_number,
    :transmitter_address,
    :transmitter_financial_institution,
    :transmitter_timestamp,
    :error_message
  ]

  @type t :: %__MODULE__{
    :id => String.t,
    :entry_type => BrokerAPI.Model.JournalEntryType.t,
    :from_account => String.t,
    :to_account => String.t,
    :settle_date => Date.t,
    :status => BrokerAPI.Model.JournalStatus.t | nil,
    :symbol => String.t,
    :qty => String.t,
    :price => String.t,
    :description => String.t | nil,
    :net_amount => String.t,
    :transmitter_name => String.t | nil,
    :transmitter_account_number => String.t | nil,
    :transmitter_address => String.t | nil,
    :transmitter_financial_institution => String.t | nil,
    :transmitter_timestamp => DateTime.t | nil,
    :error_message => String.t
  }

  alias BrokerAPI.Deserializer

  def decode(value) do
    value
     |> Deserializer.deserialize(:entry_type, :struct, BrokerAPI.Model.JournalEntryType)
     |> Deserializer.deserialize(:settle_date, :date, nil)
     |> Deserializer.deserialize(:status, :struct, BrokerAPI.Model.JournalStatus)
     |> Deserializer.deserialize(:transmitter_timestamp, :datetime, nil)
  end
end


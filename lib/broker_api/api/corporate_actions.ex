# NOTE: This file is auto generated by OpenAPI Generator 7.6.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule BrokerAPI.Api.CorporateActions do
  @moduledoc """
  API calls for all endpoints tagged `CorporateActions`.
  """

  alias BrokerAPI.Connection
  import BrokerAPI.RequestBuilder

  @doc """
  Retrieving Announcements
  This enables searching for an array of corporate action announcements based on criteria.

  ### Parameters

  - `connection` (BrokerAPI.Connection): Connection to server
  - `ca_types` (String.t): A comma-delimited list of CorporateActionType values
  - `since` (Date.t): The start (inclusive) of the date range when searching corporate action announcements. This should follow the YYYY-MM-DD format. The date range is limited to 90 days.
  - `until` (Date.t): The end (inclusive) of the date range when searching corporate action announcements. This should follow the YYYY-MM-DD format. The date range is limited to 90 days.
  - `opts` (keyword): Optional parameters
    - `:symbol` (String.t): The symbol of the company initiating the announcement.
    - `:cusip` (String.t): The CUSIP of the company initiating the announcement.
    - `:date_type` (String.t): An emum of possible ways to use the `since` and `until` parameters to search by.  the types are:  - **declaration_date**: The date of the preliminary announcement details or the date that any subsequent term updates took place. - **ex_date**: The date on which any security purchasing activity will not result in a corporate action entitlement. Any selling activity that takes place on or after this date will result in a corporate action entitlement. - **record_date**: The date the company checks its records to determine who is shareholder in order to allocate entitlements. - **payable_date**: The date that the stock and cash positions will update according to the account positions as of the record date.

  ### Returns

  - `{:ok, [%Announcement{}, ...]}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec get_corporate_announcements(Tesla.Env.client, String.t, Date.t, Date.t, keyword()) :: {:ok, list(BrokerAPI.Model.Announcement.t)} | {:ok, BrokerAPI.Model.Error.t} | {:error, Tesla.Env.t}
  def get_corporate_announcements(connection, ca_types, since, until, opts \\ []) do
    optional_params = %{
      :symbol => :query,
      :cusip => :query,
      :date_type => :query
    }

    request =
      %{}
      |> method(:get)
      |> url("/v1/corporate_actions/announcements")
      |> add_param(:query, :ca_types, ca_types)
      |> add_param(:query, :since, since)
      |> add_param(:query, :until, until)
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, BrokerAPI.Model.Announcement},
      {400, BrokerAPI.Model.Error}
    ])
  end
end

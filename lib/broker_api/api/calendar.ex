# NOTE: This file is auto generated by OpenAPI Generator 7.6.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule BrokerAPI.Api.Calendar do
  @moduledoc """
  API calls for all endpoints tagged `Calendar`.
  """

  alias BrokerAPI.Connection
  import BrokerAPI.RequestBuilder

  @doc """
  Query market calendar
  The calendar API serves the full list of market days from 1970 to 2029. It can also be queried by specifying a start and/or end time to narrow down the results. In addition to the dates, the response also contains the specific open and close times for the market days, taking into account early closures.

  ### Parameters

  - `connection` (BrokerAPI.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:start` (Date.t): The first date to retrieve data for. (Inclusive) in YYYY-MM-DD format
    - `:end` (Date.t): The last date to retrieve data for. (Inclusive) in YYYY-MM-DD format

  ### Returns

  - `{:ok, [%Calendar{}, ...]}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec query_market_calendar(Tesla.Env.client, keyword()) :: {:ok, list(BrokerAPI.Model.Calendar.t)} | {:error, Tesla.Env.t}
  def query_market_calendar(connection, opts \\ []) do
    optional_params = %{
      :start => :query,
      :end => :query
    }

    request =
      %{}
      |> method(:get)
      |> url("/v1/calendar")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, BrokerAPI.Model.Calendar}
    ])
  end
end

# NOTE: This file is auto generated by OpenAPI Generator 7.6.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule BrokerAPI.Api.Documents do
  @moduledoc """
  API calls for all endpoints tagged `Documents`.
  """

  alias BrokerAPI.Connection
  import BrokerAPI.RequestBuilder

  @doc """
  Download a document file that belongs to an account.
  This endpoint allows you to download a document identified by the document_id passed in the header. The returned document is in PDF format.  The operation returns a pre-signed downloadable link as a redirect with HTTP status code 301 if one is found. 

  ### Parameters

  - `connection` (BrokerAPI.Connection): Connection to server
  - `account_id` (String.t): Account identifier.
  - `document_id` (String.t): Document identifier.
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec download_doc_from_account(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def download_doc_from_account(connection, account_id, document_id, _opts \\ []) do
    request =
      %{}
      |> method(:get)
      |> url("/v1/accounts/#{account_id}/documents/#{document_id}/download")
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {301, false},
      {404, false}
    ])
  end

  @doc """
  Download a document file directly
  The operation returns a pre-signed downloadable link as a redirect with HTTP status code 301 if one is found. 

  ### Parameters

  - `connection` (BrokerAPI.Connection): Connection to server
  - `document_id` (String.t): Document identifier.
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec download_document_by_id(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def download_document_by_id(connection, document_id, _opts \\ []) do
    request =
      %{}
      |> method(:get)
      |> url("/v1/documents/#{document_id}")
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {301, false},
      {404, false}
    ])
  end

  @doc """
  Return a list of account documents.
  This endpoint allows you to query all the documents that belong to a certain account. You can filter by date, or type of document.

  ### Parameters

  - `connection` (BrokerAPI.Connection): Connection to server
  - `account_id` (String.t): Account identifier.
  - `opts` (keyword): Optional parameters
    - `:start_date` (Date.t): optional date value to filter the list (inclusive).
    - `:end_date` (Date.t): optional date value to filter the list (inclusive).
    - `:type` (String.t): See DocumentType model for reference and explanation of values

  ### Returns

  - `{:ok, [%Set{}, ...]}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec get_docs_for_account(Tesla.Env.client, String.t, keyword()) :: {:ok, list(BrokerAPI.Model.DocumentInner.t)} | {:ok, String.t} | {:error, Tesla.Env.t}
  def get_docs_for_account(connection, account_id, opts \\ []) do
    optional_params = %{
      :start_date => :query,
      :end_date => :query,
      :type => :query
    }

    request =
      %{}
      |> method(:get)
      |> url("/v1/accounts/#{account_id}/documents")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, BrokerAPI.Model.DocumentInner},
      {404, false}
    ])
  end
end
